# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'browser.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1001, 649)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        self.tabWidget = QtWidgets.QTabWidget(self.widget)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(True)
        self.tabWidget.setMovable(True)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")

        # self.tab = QtWidgets.QWidget()
        # self.tab.setObjectName("tab")
        # self.tabWidget.addTab(self.tab, "")

        # self.tab_2 = QtWidgets.QWidget()
        # self.tab_2.setObjectName("tab_2")
        # self.tabWidget.addTab(self.tab_2, "")

        self.verticalLayout_2.addWidget(self.tabWidget)
        self.verticalLayout.addWidget(self.widget)
        MainWindow.setCentralWidget(self.centralwidget)


        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1001, 22))
        self.menuBar.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.menuBar.setStyleSheet("background-color: rgb(211, 215, 207);")
        self.menuBar.setObjectName("menuBar")

        self.menubrowser = QtWidgets.QMenu(self.menuBar)
        self.menubrowser.setObjectName("menubrowser")

        self.menuHelp_3 = QtWidgets.QMenu(self.menubrowser)
        self.menuHelp_3.setObjectName("menuHelp_3")
        MainWindow.setMenuBar(self.menuBar)

        

        self.navbar = QtWidgets.QToolBar(MainWindow)
        self.navbar.setContextMenuPolicy(QtCore.Qt.PreventContextMenu)
        self.navbar.setStyleSheet("background-color: rgb(85, 87, 83);")
        self.navbar.setAllowedAreas(QtCore.Qt.NoToolBarArea)
        self.navbar.setObjectName("navbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.navbar)

        self.actionignito_mode = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/24x24/cil-moon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionignito_mode.setIcon(icon)
        self.actionignito_mode.setObjectName("actionignito_mode")


        self.actionHistory = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/address-book-blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHistory.setIcon(icon1)
        self.actionHistory.setObjectName("actionHistory")


        self.actionDownloads = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icon2/icons/downloads-icon-32x32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDownloads.setIcon(icon2)
        self.actionDownloads.setObjectName("actionDownloads")


        self.actionExit = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/cross-circle-frame.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon3)
        self.actionExit.setObjectName("actionExit")


        self.actionAbout_vc_browser = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/balloon-buzz-left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout_vc_browser.setIcon(icon4)
        self.actionAbout_vc_browser.setObjectName("actionAbout_vc_browser")


        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/document-url.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDocumentation.setIcon(icon5)
        self.actionDocumentation.setObjectName("actionDocumentation")


        self.actionPlugins = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/plug.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPlugins.setIcon(icon6)
        self.actionPlugins.setObjectName("actionPlugins")


        self.actionback = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/24x24/cil-arrow-left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionback.setIcon(icon7)
        self.actionback.setObjectName("actionback")


        self.actionforward = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/24x24/cil-arrow-right.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionforward.setIcon(icon8)
        self.actionforward.setObjectName("actionforward")


        self.actionreload = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons/24x24/cil-loop-circular.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionreload.setIcon(icon9)
        self.actionreload.setObjectName("actionreload")


        self.actionhome = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icons/24x24/cil-home.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionhome.setIcon(icon10)
        self.actionhome.setObjectName("actionhome")


        self.actionSettings = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icons/24x24/cil-settings.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSettings.setIcon(icon11)
        self.actionSettings.setObjectName("actionSettings")


        self.actionNewTab = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("icon2/icons/tab-new.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewTab.setIcon(icon12)
        self.actionNewTab.setObjectName("actionNewTab")


        self.actionNewWindow = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("icon2/icons/window-new.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewWindow.setIcon(icon13)
        self.actionNewWindow.setObjectName("actionNewWindow")


        self.actionShortcuts = QtWidgets.QAction(MainWindow)
        self.actionShortcuts.setObjectName("actionShortcuts")
        self.actionAbout_VC_Browser = QtWidgets.QAction(MainWindow)
        self.actionAbout_VC_Browser.setObjectName("actionAbout_VC_Browser")
        self.actionBookmarks = QtWidgets.QAction(MainWindow)
        self.actionBookmarks.setObjectName("actionBookmarks")


        self.actionsearch = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("icon2/icons/search.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionsearch.setIcon(icon14)
        self.actionsearch.setObjectName("actionsearch")
        self.actionvoice = QtWidgets.QAction(MainWindow)


        self.url_bar = QLineEdit(MainWindow)


       
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("icons/24x24/cil-microphone.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionvoice.setIcon(icon15)
        self.actionvoice.setObjectName("actionvoice")
        self.menuHelp_3.addAction(self.actionAbout_vc_browser)
        self.menuHelp_3.addAction(self.actionDocumentation)
        self.menuHelp_3.addAction(self.actionPlugins)
        self.menubrowser.addAction(self.actionHistory)
        self.menubrowser.addAction(self.actionDownloads)
        self.menubrowser.addAction(self.actionBookmarks)
        self.menubrowser.addAction(self.actionSettings)
        self.menubrowser.addAction(self.actionExit)
        self.menubrowser.addAction(self.actionAbout_vc_browser)
        self.menubrowser.addAction(self.menuHelp_3.menuAction())
        self.menuBar.addAction(self.menubrowser.menuAction())


        self.navbar.addAction(self.actionback)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionforward)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionreload)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionhome)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionNewTab)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionNewWindow)
        self.navbar.addSeparator()
        self.navbar.addWidget(self.url_bar)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionsearch)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionignito_mode)
        self.navbar.addSeparator()
        self.navbar.addAction(self.actionvoice)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "VC Browser"))
        # self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        # self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.menubrowser.setTitle(_translate("MainWindow", "browser"))
        self.menuHelp_3.setTitle(_translate("MainWindow", "Help"))
        self.navbar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionignito_mode.setText(_translate("MainWindow", "incognito mode "))
        self.actionHistory.setText(_translate("MainWindow", "History"))
        self.actionDownloads.setText(_translate("MainWindow", "Downloads"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionAbout_vc_browser.setText(_translate("MainWindow", "About vc browser"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionPlugins.setText(_translate("MainWindow", "Plugins"))
        self.actionback.setText(_translate("MainWindow", "back"))
        self.actionback.setToolTip(_translate("MainWindow", "back"))
        self.actionback.setShortcut(_translate("MainWindow", "PgDown"))
        self.actionforward.setText(_translate("MainWindow", "forward"))
        self.actionforward.setShortcut(_translate("MainWindow", "PgUp"))
        self.actionreload.setText(_translate("MainWindow", "reload"))
        self.actionreload.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionhome.setText(_translate("MainWindow", "home"))
        self.actionhome.setToolTip(_translate("MainWindow", "home"))
        self.actionhome.setShortcut(_translate("MainWindow", "Home"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionNewTab.setText(_translate("MainWindow", "newtab"))
        self.actionNewTab.setToolTip(_translate("MainWindow", "New Tab"))
        self.actionNewTab.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionNewWindow.setText(_translate("MainWindow", "Newwindow"))
        self.actionNewWindow.setToolTip(_translate("MainWindow", "New window"))
        self.actionNewWindow.setShortcut(_translate("MainWindow", "Ctrl+Shift+N"))
        self.actionShortcuts.setText(_translate("MainWindow", "Shortcuts"))
        self.actionAbout_VC_Browser.setText(_translate("MainWindow", "About VC Browser"))
        self.actionBookmarks.setText(_translate("MainWindow", "Bookmarks"))
        self.actionsearch.setText(_translate("MainWindow", "search"))
        self.actionsearch.setToolTip(_translate("MainWindow", "Search"))
        self.actionvoice.setText(_translate("MainWindow", "voice"))
        self.actionvoice.setToolTip(_translate("MainWindow", "voice search"))
        self.actionvoice.setShortcut(_translate("MainWindow", "Ctrl+Alt+V"))



# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_MainWindow()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())
